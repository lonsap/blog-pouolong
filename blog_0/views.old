#-*- coding: utf-8 -*-
from django.shortcuts import render
from datetime import datetime
from blog.forms import ContactForm


from django.utils import timezone
from django.shortcuts import render, get_object_or_404
#from .models import Post
#from .forms import PostForm
from django.shortcuts import redirect

# Create your views here.
from django.http import HttpResponse
    
def post_list(request):
    posts = Post.objects.all().order_by('date_publication')
    return render(request, 'blog/post_list.html', {'posts': posts})

        
def post_detail(request, pk):
    post = get_object_or_404(Post, pk=pk)
    return render(request, 'blog/post_detail.html', {'post': post})
        
def post_new(request):
    if request.method == "POST":
        form = PostForm(request.POST)
        if form.is_valid():
            post = form.save(commit=False)
            post.author = request.user
            post.published_date = timezone.now()
            post.save()
            return redirect('blog.views.post_detail', pk=post.pk)
    else:
        form = PostForm()
    return render(request, 'blog/post_edit.html', {'form': form})
        
        
def post_edit(request, pk):
    post = get_object_or_404(Post, pk=pk)
    if request.method == "POST":
        form = PostForm(request.POST, instance=post)
        if form.is_valid():
            post = form.save(commit=False)
            post.author = request.user
            post.date_publication = timezone.now()
            post.save()
            return redirect('blog.views.post_detail', pk=post.pk)
    else:
        form = PostForm(instance=post)
    return render(request, 'blog/post_edit.html', {'form': form})



    
    
    #---------------------------------------------
    
    
    #---- Vue utilisant un formulaire ----------
    
    def contact_blog(request):
        envoi = False
        if request.method == 'POST':  # S'il s'agit d'une requête POST
            form = ContactForm(request.POST)  # Nous reprenons les données
    
            if form.is_valid(): # Nous vérifions que les données envoyées sont valides
    
                # Ici nous pouvons traiter les données du formulaire
                sujet = form.cleaned_data['sujet']
                message = form.cleaned_data['message']
                envoyeur = form.cleaned_data['envoyeur']
                renvoi = form.cleaned_data['renvoi']
    
                # Nous pourrions ici envoyer l'e-mail grâce aux données que nous venons de récupérer
    
                envoi = True
    
        else: # Si ce n'est pas du POST, c'est probablement une requête GET
            form = ContactForm()  # Nous créons un formulaire vide
    
    return render(request, 'blog/contact_blog.html', locals())
    
    #--------------------------------------------------------